use strict;

my $consume_cache;
sub consume($$){
	my($mask,$handle)=@_;
	
	my $length=
		$consume_cache->{$mask}||=length pack $mask,"";
	
	read $handle,my $buffer,$length;
	
	unpack $mask,$buffer;
}

sub bmp_header($$){
	my($width,$height)=@_;
	
	my $res="";
	
	$res.=	pack "a2ISSI","BM",$width*$height*4+0x8a,0,0,0x8a;
	$res.=	pack "I3S2I6",0x7c,$width,$height,1,32,3,$width*$height*4,2835,2835,0,0;
	$res.=	pack "C*",
		0x00, 0x00, 0xFF, 0x00, 0x00, 0xFF, 0x00, 0x00,
		0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF,
		0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x56, 0xB8, 0x1E, 0xFC,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x66, 0x66, 0x66, 0xFC, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x63, 0xF8, 0x28, 0xFF,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00;
	
	$res
}

my($name,$dest)=@ARGV;

open my $h,"<",$name or die "$! - $name";
binmode $h;

my($width,$height,$unk0,$unk1,$unk2)=consume "vvVVV",$h;

my(@palette)=map{
	[consume "CCCC",$h]
}1..0x100;

open my $d,">","$dest.bmp" or die "$! - $dest.bmp";
binmode $d;

print $d bmp_header $width,$height;

my $pos=tell $d;

for my $y(0..$height-1){
	for my $x(0..$width-1){
		my($index)=consume "C",$h;
		my $color=$palette[$index];
		my $r=$color->[0];
		my $g=$color->[1];
		my $b=$color->[2];
		my $a=$color->[3];
		
		seek $d,$pos+$x*4+($height-$y-1)*$width*4,0;
		print $d pack "CCCC",$b,$g,$r,$a;
	}
}

close $d;
close $h;

`convert $dest.bmp $dest`;
unlink "$dest.bmp" if -e $dest;

